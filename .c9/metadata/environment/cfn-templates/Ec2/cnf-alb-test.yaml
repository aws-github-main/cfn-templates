{"changed":false,"filter":false,"title":"cnf-alb-test.yaml","tooltip":"/cfn-templates/Ec2/cnf-alb-test.yaml","value":"Parameters:\n  myKeyPair: \n    Description: Amazon EC2 Key Pair\n    Type: AWS::EC2::KeyPair::KeyName\n  VpcId:\n    Description: Enter the VpcId\n    Type: AWS::EC2::VPC::Id\n  SubnetIds:\n    Description: Enter the Subnets\n    Type: List<AWS::EC2::Subnet::Id>\nMappings:\n  RegionMap:\n    us-east-1:\n      AMI: ami-1853ac65\n    us-west-1:\n      AMI: ami-bf5540df\n    eu-west-1:\n      AMI: ami-3bfab942\n    ap-southeast-1:\n      AMI: ami-e2adf99e\n    ap-southeast-2:\n      AMI: ami-43874721\nResources:\n  LoadBalancer: # Application Load Balancer\n    Type: AWS::ElasticLoadBalancingV2::LoadBalancer\n    Properties:\n      SecurityGroups:\n        - !Ref ALBSecurityGroup\n      Subnets: !Ref SubnetIds\n  LoadBalancerListener: # Port 80 Listener for ALB\n    Type: AWS::ElasticLoadBalancingV2::Listener\n    Properties:\n      LoadBalancerArn: !Ref LoadBalancer\n      Port: 80\n      Protocol: HTTP\n      DefaultActions:\n        - Type: forward\n          TargetGroupArn:\n            Ref: TargetGroup\n  TargetGroup:\n    Type: AWS::ElasticLoadBalancingV2::TargetGroup\n    Properties:\n      Port: 80\n      Protocol: HTTP\n      VpcId: !Ref VpcId\n  AutoScalingGroup:\n    Type: AWS::AutoScaling::AutoScalingGroup\n    Properties:\n      AvailabilityZones: !GetAZs\n      LaunchConfigurationName: !Ref LaunchConfiguration\n      MinSize: 1\n      MaxSize: 3\n      TargetGroupARNs: \n        - !Ref TargetGroup\n  LaunchConfiguration:\n    Type: AWS::AutoScaling::LaunchConfiguration\n    Metadata: \t\n      Comment: Install php and httpd\n      AWS::CloudFormation::Init:\n        config: \n          packages: \n            yum:\n              httpd: []\n              php: []\n          files: \n            /var/www/html/index.php:\n              content: !Sub |\n                <?php print \"Hello world Abs was here!\"; ?>\n          services: \n            sysvinit:\n              httpd:\n                enabled: true\n                ensureRunning: true\n    Properties:\n      KeyName: !Ref myKeyPair\n      InstanceType: t2.micro\n      SecurityGroups:\n        - !Ref EC2SecurityGroup\n      ImageId:\n        Fn::FindInMap:\n        - RegionMap\n        - !Ref AWS::Region\n        - AMI\n      UserData:\n        'Fn::Base64': \n          !Sub |\n            #!/bin/bash -xe                        \n            # Ensure AWS CFN Bootstrap is the latest\n            yum install -y aws-cfn-bootstrap\n            # Install the files and packages from the metadata\n            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource LaunchConfiguration --region ${AWS::Region}\n  ALBSecurityGroup:\n    Type: AWS::EC2::SecurityGroup\n    Properties:\n      GroupDescription: ALB Security Group\n      VpcId: !Ref VpcId\n      SecurityGroupIngress:\n        - IpProtocol: tcp\n          FromPort: 80\n          ToPort: 80\n          CidrIp: 0.0.0.0/0\n  EC2SecurityGroup: \n    Type: AWS::EC2::SecurityGroup\n    Properties:\n      GroupDescription: EC2 Instance\n  EC2InboundRule: # EC2 can only accept traffic from ALB\n    Type: AWS::EC2::SecurityGroupIngress\n    Properties:\n      IpProtocol: tcp\n      FromPort: 80\n      ToPort: 80\n      SourceSecurityGroupId:\n        !GetAtt\n        - ALBSecurityGroup\n        - GroupId\n      GroupId:\n        !GetAtt\n        - EC2SecurityGroup\n        - GroupId\nOutputs:\n  PublicDns:\n    Description: The Public DNS\n    Value: !Sub 'http://${LoadBalancer.DNSName}'","undoManager":{"mark":-1,"position":-1,"stack":[]},"ace":{"folds":[],"scrolltop":714.5,"scrollleft":0,"selection":{"start":{"row":53,"column":24},"end":{"row":53,"column":24},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":50,"state":"start","mode":"ace/mode/yaml"}},"timestamp":1575308372945}