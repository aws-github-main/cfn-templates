{"changed":false,"filter":false,"title":"vpc-fullstack-alb.yaml","tooltip":"/cfn-templates/Ec2/vpc-fullstack-alb.yaml","value":"#Author: Birju\n# template to create user defined vpc.\nMappings:\n  RegionMap:\n    us-east-1:\n      AMI: ami-1853ac65\n    us-west-1:\n      AMI: ami-bf5540df\n    eu-west-1:\n      AMI: ami-3bfab942\n    ap-southeast-1:\n      AMI: ami-e2adf99e\n    ap-southeast-2:\n      AMI: ami-43874721\nMetadata:\n  AWS::CloudFormation::Interface:\n    ParameterGroups:\n      - Label:\n          default:  Enter Ec2 Instance Name\n        Parameters:\n          - InstanceName\n      - Label:\n          default:  Enter Ec2 Instance Type\n        Parameters:\n          - InstanceType  \n      - Label:\n          default: Enter Vpc Id\n        Parameters:\n          - VpcIdUser\n      - Label:\n          default: Application Load Balancer Name\n        Parameters:\n          - albName\n      - Label:\n          default: ALB Security Group Name\n        Parameters:\n          - albSecurityGroupName\n      - Label:\n          default: Select subnets\n        Parameters:\n          - SubnetIds\nParameters:\n  InstanceName:\n    Type: String\n    Default: alb-webserver-1\n  InstanceType:\n    Type: String\n    Default: t2.micro\n  KeyPair:\n    Type: AWS::EC2::KeyPair::KeyName\n    Description:  Select KeyPair Name\n  VpcIdUser:\n    Type: AWS::EC2::VPC::Id\n    Description:  Select Vpc ID\n  albSecurityGroupName:\n    Type: String\n    Description: Enter ALB Security Group\n    Default: alb-ec2\n  albName:\n    Type: String\n    Description: Enter Application Load Balancer Name\n    Default: alb-sg\n  SubnetIds:\n    Type: List<AWS::EC2::Subnet::Id>\n    Description: Select subnets\nResources:\n  Ec2Instance:\n    Type: AWS::EC2::Instance\n    Metadata:\n      AWS::CloudFormation::Init:\n        config:\n          packages:\n            yum:\n              httpd: []\n              php: []\n          files:\n            /www/var/html/index.php:\n              content: !Sub |\n                <?php print \"This is web server with application load balancer. \"; ?>\n          services:\n            sysvinit:\n              httpd:\n                enabled: true\n                EnsureRunning: true\n    Properties:\n      InstanceType: !Ref InstanceType\n      ImageId: !FindInMap\n        - RegionMap\n        - !Ref AWS::Region\n        - AMI\n      KeyName: !Ref KeyPair\n      SubnetId: subnet-41c1b126\n      Tags:\n        - Key: Name\n          Value: !Ref InstanceName\n      SecurityGroupIds:\n        - !Ref SecurityGroup\n      UserData:\n        'Fn::Base64':\n          !Sub |\n            #!/bin/bash -xe\n            # confirm aws cfn is up-to-date\n            yum install -y aws-cfn-bootstrap\n            #install files and services from metadata \n            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource Ec2Instance --region ${AWS::Region}\n  SecurityGroup:\n    Type: AWS::EC2::SecurityGroup\n    Properties:\n      GroupDescription: \"EC2 Security Group created by stack\"\n      SecurityGroupIngress:\n        - IpProtocol: tcp\n          FromPort: 80\n          ToPort: 80\n          SourceSecurityGroupId: !GetAtt AlbSecurityGroup.GroupId\n\n      Tags:\n          - Key: Name\n            Value: \"ec2-sg\"\n      VpcId: !Ref VpcIdUser\n  ApplicationLoadBalancer:\n    Type: AWS::ElasticLoadBalancingV2::LoadBalancer\n    Properties:\n      Name: !Ref albName\n      Scheme: internet-facing\n      IpAddressType: ipv4\n      SecurityGroups:\n        - !Ref  AlbSecurityGroup\n      Subnets: !Ref SubnetIds\n      Tags:\n        - Key: Name\n          Value: !Ref albName\n  AlbListener:\n    Type: AWS::ElasticLoadBalancingV2::Listener\n    Properties:\n      LoadBalancerArn: !Ref ApplicationLoadBalancer\n      Port: 80\n      Protocol: HTTP\n      DefaultActions:\n        - Type: forward\n          TargetGroupArn: !Ref AlbTargetGroup\n  AlbTargetGroup:\n    Type:  AWS::ElasticLoadBalancingV2::TargetGroup\n    Properties:\n      Port: 80\n      Protocol: HTTP\n      VpcId: !Ref VpcIdUser\n      Targets:\n        - Id: !Ref Ec2Instance\n  AlbSecurityGroup:\n    Type: AWS::EC2::SecurityGroup\n    Properties:\n      VpcId: !Ref VpcIdUser\n      GroupDescription: ALB SecurityGroup\n      SecurityGroupIngress:\n        - IpProtocol: tcp\n          ToPort: 80\n          FromPort: 80\n          CidrIp: 0.0.0.0/0\n      Tags:\n        - Key: Name\n          Value: alb-sg-cft\nOutputs:\n  PublicDns:\n    Description: The public DNS\n    Value: !Sub 'http://${ApplicationLoadBalancer.DNSName}'\n  opVpcId:\n    Description: The VPC created\n    Value: !Ref VpcIdUser\n  opAlbName:\n    Description: The application load balancer name\n    Value: !Ref albName \n  opImageId:\n    Description: Image Id\n    Value:\n      Fn::FindInMap:\n      - RegionMap\n      - !Ref AWS::Region\n      - AMI\n  instanceName:\n    Description: 'Ec2 Instance created by stack: '\n    Value: !Sub '${AWS::StackName}'\n  AlbSecurityGroup:\n    Description:  ALB SecurityGroup\n    Value: !Ref AlbSecurityGroup\n  EC2InstanceSecurityGroup:\n    Description: EC2 instance security group\n    Value: !Ref SecurityGroup\n    ","undoManager":{"mark":-1,"position":-1,"stack":[]},"ace":{"folds":[],"scrolltop":909.5,"scrollleft":0,"selection":{"start":{"row":80,"column":21},"end":{"row":80,"column":21},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":63,"state":"start","mode":"ace/mode/yaml"}},"timestamp":1575412555915}